server {
        listen          80 default_server;
        listen          [::]:80 default_server;
        server_name     ${WWW_URL};
	    return 301      https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${WWW_URL};

    root            /var/www/html;

    error_log  /var/log/nginx/error.log; 
    access_log  /var/log/nginx/access.log; 
        
    # Protect information disclosure
    server_tokens off;
    # Need to recompile nginx with module nginx-extras
    # Change the Server content in header
    more_set_headers "Server: ${HTTP_SERVER_NAME}";
    # Protect clickjacking
    add_header X-Frame-Options SAMEORIGIN;
    # Protect XSS
    add_header X-XSS-Protection "1; mode=block";
    # CSP : specify the content permit on app
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";
    # Protect content-type sniffing
    add_header X-Content-Type-Options nosniff;
    # Hide this header
    proxy_hide_header X-Powered-By;

proxy_cache_path 
    /var/cache/nginx
    levels=1:2
    keys_zone=nginx_cache:10m
    max_size=10g
    inactive=60m
    use_temp_path=off;

    # Enable compress on ...
    gzip           on;
    # ... JS, image and CSS file 
    gzip_types application/javascript image/* text/css;
    # Allow to not compress if browser don't manage it
    gunzip         on;

    # Redirect error below on specific page
    error_page 401 403 404 /400.html;
    error_page 500 502 503 504 /500.html;

    location / {
        # Cache the query
        proxy_cache nginx_cache;
    }
    
    # Hotlinking
    location ~* \.(gif|png|jpe?g)$ {
        valid_referers none blocked www.${WWW_URL} ${WWW_URL};
    
        if ($invalid_referer) { 
            return 403;
        }

        # Static files
        root /mnt/img/;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }

    ssl_certificate "/etc/nginx/ssl/${CERT_NAME}.csr";
    ssl_certificate_key "/etc/nginx/ssl/${CERT_NAME}.key";

    # enable session resumption to improve https performance
    # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam "/etc/nginx/ssl/${DH_NAME}.pem";

    # enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    ssl_prefer_server_ciphers on;
    # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;

    # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
    # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ssl_stapling on;
    # ssl_stapling_verify on;
    # ssl_trusted_certificate "/etc/nginx/ssl/${CERT_TRUST_NAME}.crt";

    # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    # also https://hstspreload.org/
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

}